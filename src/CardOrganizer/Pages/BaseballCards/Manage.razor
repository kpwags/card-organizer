@page "/baseball/manage"
@using CardOrganizer.Extensions

@inject IBaseballCardRepository BaseballCardRepository
@inject IJSRuntime JsRuntime

<AuthorizeView>
    <Authorized>
        <div class="p-8 w-full my-0 mx-auto">
            <div class="flex justify-between">
                <h1 class="text-3xl">Manage Baseball Cards</h1>
                <a href="/baseball/add" class="btn-primary">Add Card</a>
            </div>
            <div class="w-full">
                <table class="standard-table border-2 border-zinc-700 table-auto w-full my-16">
                    <thead>
                    <tr class="border-b-2 border-zinc-700">
                        <th class="text-left p-2">Player</th>
                        <th class="text-left p-2">Team</th>
                        <th class="text-left p-2">Brand</th>
                        <th class="text-left p-2">Quantity</th>
                        <th class="text-left p-2">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                        @if (!_baseballCards.Any())
                        {
                            <tr class="py-4">
                                <td colspan="5" class="p-16 text-center">No Cards Available</td>
                            </tr>
                        }
                    
                        @foreach (var card in _baseballCards)
                        {
                            <tr class="py-4 border-b border-zinc-700">
                                <td class="p-2">
                                    @card.PlayerName (@card.PlayerPosition)
                                </td>
                                <td class="p-2">@card.Team</td>
                                <td class="p-2">@card.Year @card.Brand.Name</td>
                                <td class="p-2">@card.Quantity</td>
                                <td class="p-2">
                                    <a href="/baseball/edit/@card.BaseballCardId" class="pr-4">Edit</a>
                                    <button
                                        type="button"
                                        class="btn-action-link"
                                        @onclick="async () => await DeleteCard(card.BaseballCardId)">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <PleaseLogin />
    </NotAuthorized>
</AuthorizeView>

@code {
    private IReadOnlyCollection<BaseballCard> _baseballCards = Array.Empty<BaseballCard>();

    protected override async Task OnInitializedAsync()
    {
        _baseballCards = await Task.FromResult(BaseballCardRepository.GetAll().ToList());
    }

    private async Task DeleteCard(int baseballCardId)
    {
        if (!await JsRuntime.Confirm("Are you sure you want to delete this card?"))
        {
            return;
        }
        
        await BaseballCardRepository.Delete(baseballCardId);
        
        _baseballCards = await Task.FromResult(BaseballCardRepository.GetAll().ToList());
    }
}